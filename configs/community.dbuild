include file(".dbuild/resolvers.conf")

build += {
  extraction-version: 2.12.8
  space: scala
  projects: [
  {
    name:  "scala"
    system: assemble
    cross-version: binary
    extra.parts.projects: [
      {
        set-version: 2.12.8
        name:   scala-library
        system: aether
        uri:   "aether:org.scala-lang#scala-library;"2.12.8
      }
      {
        set-version: 2.12.8
        name:   scala-reflect
        system: aether
        uri:   "aether:org.scala-lang#scala-reflect;"2.12.8
      }
      {
        set-version: 2.12.8
        name:   scala-compiler
        system: aether
        uri:   "aether:org.scala-lang#scala-compiler;"2.12.8
      }
    ]
  }

]}

//// space: scala.main

build += {

  space: scala.main

  check-missing: [ true, false ]
  cross-version: [ disabled, standard ]
  extraction-version: 2.12.8
  sbt-version: 1.3.0-RC3

  projects: [

  {
    name: "scala-parser-combinators"
    uri: "https://github.com/scala/scala-parser-combinators.git#1.1.x"
    extra.options: ["-Dgjggfjkg=foo2"]
    extra.projects: ["scala-parser-combinators"]  // JVM only
    extra.commands: [
      // work around https://github.com/scala/community-builds/issues/575
      // (in a community build context, we don't need MiMa to run)
      "set every ScalaModulePlugin.mimaPreviousVersion := None"
      "set `scala-parser-combinatorsJVM` / Compile / doc / sources := List()"
    ]
    extra.run-tests: false
  }

]}
